{"ast":null,"code":"var _jsxFileName = \"/home/rcts/Desktop/k-hub/frontend/src/components/CourseNotifications.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { FiBell } from 'react-icons/fi';\nimport { notificationService } from '../services/notificationService';\nimport { format } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CourseNotifications = ({\n  courseId\n}) => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const fetchNotifications = async () => {\n    try {\n      const {\n        notifications\n      } = await notificationService.getCourseNotifications(courseId);\n      setNotifications(notifications);\n    } catch (error) {\n      console.error('Error fetching course notifications:', error);\n    }\n  };\n  useEffect(() => {\n    if (courseId) {\n      fetchNotifications();\n      const interval = setInterval(fetchNotifications, 60000); // Refresh every minute\n      return () => clearInterval(interval);\n    }\n  }, [courseId, fetchNotifications]);\n  const handleMarkAsRead = async notificationId => {\n    try {\n      await notificationService.markAsRead([notificationId]);\n      fetchNotifications();\n    } catch (error) {\n      console.error('Error marking notification as read:', error);\n    }\n  };\n  const unreadCount = notifications.filter(n => n.status === 'unread').length;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative inline-block\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsOpen(!isOpen),\n      className: \"flex items-center space-x-2 px-4 py-2 bg-white rounded-lg shadow hover:bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(FiBell, {\n        className: unreadCount > 0 ? 'text-blue-600' : 'text-gray-600'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-sm font-medium\",\n        children: \"Course Updates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bg-red-600 text-white text-xs font-bold px-2 py-1 rounded-full\",\n        children: unreadCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute right-0 mt-2 w-96 bg-white rounded-lg shadow-xl z-50 max-h-[60vh] overflow-y-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 border-b\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold\",\n          children: \"Course Notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"divide-y divide-gray-100\",\n        children: notifications.length > 0 ? notifications.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `p-4 ${notification.status === 'unread' ? 'bg-blue-50' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-start\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"font-medium text-gray-900\",\n              children: notification.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 41\n            }, this), notification.status === 'unread' && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleMarkAsRead(notification._id),\n              className: \"text-xs text-blue-600 hover:text-blue-800\",\n              children: \"Mark as read\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-600 mt-1\",\n            children: notification.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-gray-400 mt-2\",\n            children: format(new Date(notification.createdAt), 'MMM d, yyyy h:mm a')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 37\n          }, this)]\n        }, notification._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 33\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 text-center text-gray-500\",\n          children: \"No course notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(CourseNotifications, \"WRTLdl6PUTfEhcxb3ij0hFbIfNM=\");\n_c = CourseNotifications;\nexport default CourseNotifications;\nvar _c;\n$RefreshReg$(_c, \"CourseNotifications\");","map":{"version":3,"names":["React","useState","useEffect","FiBell","notificationService","format","jsxDEV","_jsxDEV","CourseNotifications","courseId","_s","notifications","setNotifications","isOpen","setIsOpen","fetchNotifications","getCourseNotifications","error","console","interval","setInterval","clearInterval","handleMarkAsRead","notificationId","markAsRead","unreadCount","filter","n","status","length","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","notification","title","_id","message","Date","createdAt","_c","$RefreshReg$"],"sources":["/home/rcts/Desktop/k-hub/frontend/src/components/CourseNotifications.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FiBell } from 'react-icons/fi';\nimport { notificationService } from '../services/notificationService';\nimport { format } from 'date-fns';\n\nconst CourseNotifications = ({ courseId }) => {\n    const [notifications, setNotifications] = useState([]);\n    const [isOpen, setIsOpen] = useState(false);\n\n    const fetchNotifications = async () => {\n        try {\n            const { notifications } = await notificationService.getCourseNotifications(courseId);\n            setNotifications(notifications);\n        } catch (error) {\n            console.error('Error fetching course notifications:', error);\n        }\n    };\n\n    useEffect(() => {\n        if (courseId) {\n            fetchNotifications();\n            const interval = setInterval(fetchNotifications, 60000); // Refresh every minute\n            return () => clearInterval(interval);\n        }\n    }, [courseId, fetchNotifications]);\n\n    const handleMarkAsRead = async (notificationId) => {\n        try {\n            await notificationService.markAsRead([notificationId]);\n            fetchNotifications();\n        } catch (error) {\n            console.error('Error marking notification as read:', error);\n        }\n    };\n\n    const unreadCount = notifications.filter(n => n.status === 'unread').length;\n\n    return (\n        <div className=\"relative inline-block\">\n            <button\n                onClick={() => setIsOpen(!isOpen)}\n                className=\"flex items-center space-x-2 px-4 py-2 bg-white rounded-lg shadow hover:bg-gray-50\"\n            >\n                <FiBell className={unreadCount > 0 ? 'text-blue-600' : 'text-gray-600'} />\n                <span className=\"text-sm font-medium\">Course Updates</span>\n                {unreadCount > 0 && (\n                    <span className=\"bg-red-600 text-white text-xs font-bold px-2 py-1 rounded-full\">\n                        {unreadCount}\n                    </span>\n                )}\n            </button>\n\n            {isOpen && (\n                <div className=\"absolute right-0 mt-2 w-96 bg-white rounded-lg shadow-xl z-50 max-h-[60vh] overflow-y-auto\">\n                    <div className=\"p-4 border-b\">\n                        <h3 className=\"text-lg font-semibold\">Course Notifications</h3>\n                    </div>\n                    <div className=\"divide-y divide-gray-100\">\n                        {notifications.length > 0 ? (\n                            notifications.map(notification => (\n                                <div\n                                    key={notification._id}\n                                    className={`p-4 ${notification.status === 'unread' ? 'bg-blue-50' : ''}`}\n                                >\n                                    <div className=\"flex justify-between items-start\">\n                                        <h4 className=\"font-medium text-gray-900\">{notification.title}</h4>\n                                        {notification.status === 'unread' && (\n                                            <button\n                                                onClick={() => handleMarkAsRead(notification._id)}\n                                                className=\"text-xs text-blue-600 hover:text-blue-800\"\n                                            >\n                                                Mark as read\n                                            </button>\n                                        )}\n                                    </div>\n                                    <p className=\"text-sm text-gray-600 mt-1\">{notification.message}</p>\n                                    <p className=\"text-xs text-gray-400 mt-2\">\n                                        {format(new Date(notification.createdAt), 'MMM d, yyyy h:mm a')}\n                                    </p>\n                                </div>\n                            ))\n                        ) : (\n                            <div className=\"p-4 text-center text-gray-500\">\n                                No course notifications\n                            </div>\n                        )}\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default CourseNotifications;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}