{"ast":null,"code":"var _jsxFileName = \"/home/rcts/Desktop/k-hub/frontend/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// Global error handler for ResizeObserver errors\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nwindow.addEventListener('error', e => {\n  if (e.message === 'ResizeObserver loop completed with undelivered notifications.' || e.message === 'ResizeObserver loop limit exceeded' || e.message.includes('ResizeObserver loop')) {\n    e.stopImmediatePropagation();\n    e.preventDefault();\n  }\n});\n\n// Unhandled promise rejection handler\nwindow.addEventListener('unhandledrejection', e => {\n  if (e.reason && e.reason.message && e.reason.message.includes('ResizeObserver')) {\n    e.preventDefault();\n  }\n});\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 26,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","jsxDEV","_jsxDEV","window","addEventListener","e","message","includes","stopImmediatePropagation","preventDefault","reason","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/rcts/Desktop/k-hub/frontend/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// Global error handler for ResizeObserver errors\nwindow.addEventListener('error', (e) => {\n    if (e.message === 'ResizeObserver loop completed with undelivered notifications.' || \n        e.message === 'ResizeObserver loop limit exceeded' ||\n        e.message.includes('ResizeObserver loop')) {\n        e.stopImmediatePropagation();\n        e.preventDefault();\n    }\n});\n\n// Unhandled promise rejection handler\nwindow.addEventListener('unhandledrejection', (e) => {\n    if (e.reason && e.reason.message && e.reason.message.includes('ResizeObserver')) {\n        e.preventDefault();\n    }\n});\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;;AAE/C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAC,MAAM,CAACC,gBAAgB,CAAC,OAAO,EAAGC,CAAC,IAAK;EACpC,IAAIA,CAAC,CAACC,OAAO,KAAK,+DAA+D,IAC7ED,CAAC,CAACC,OAAO,KAAK,oCAAoC,IAClDD,CAAC,CAACC,OAAO,CAACC,QAAQ,CAAC,qBAAqB,CAAC,EAAE;IAC3CF,CAAC,CAACG,wBAAwB,CAAC,CAAC;IAC5BH,CAAC,CAACI,cAAc,CAAC,CAAC;EACtB;AACJ,CAAC,CAAC;;AAEF;AACAN,MAAM,CAACC,gBAAgB,CAAC,oBAAoB,EAAGC,CAAC,IAAK;EACjD,IAAIA,CAAC,CAACK,MAAM,IAAIL,CAAC,CAACK,MAAM,CAACJ,OAAO,IAAID,CAAC,CAACK,MAAM,CAACJ,OAAO,CAACC,QAAQ,CAAC,gBAAgB,CAAC,EAAE;IAC7EF,CAAC,CAACI,cAAc,CAAC,CAAC;EACtB;AACJ,CAAC,CAAC;AAEF,MAAME,IAAI,GAAGb,QAAQ,CAACc,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,cACTb,OAAA,CAACL,KAAK,CAACmB,UAAU;EAAAC,QAAA,eACff,OAAA,CAACH,GAAG;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACS,CACpB,CAAC;;AAED;AACA;AACA;AACArB,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}