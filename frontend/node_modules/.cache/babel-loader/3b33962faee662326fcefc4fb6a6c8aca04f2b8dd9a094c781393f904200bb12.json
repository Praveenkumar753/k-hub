{"ast":null,"code":"var _jsxFileName = \"/home/rcts/Desktop/k-hub/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { authService } from '../services';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        isAuthenticated: true,\n        user: action.payload.user,\n        loading: false,\n        error: null\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        isAuthenticated: false,\n        user: null,\n        loading: false,\n        error: null\n      };\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case 'SET_ERROR':\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n    case 'CLEAR_ERROR':\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\nconst initialState = {\n  isAuthenticated: false,\n  user: null,\n  loading: true,\n  error: null\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n  useEffect(() => {\n    const initAuth = () => {\n      const user = authService.getCurrentUser();\n      const isAuthenticated = authService.isAuthenticated();\n      if (isAuthenticated && user) {\n        dispatch({\n          type: 'LOGIN_SUCCESS',\n          payload: {\n            user\n          }\n        });\n      } else {\n        dispatch({\n          type: 'SET_LOADING',\n          payload: false\n        });\n      }\n    };\n    initAuth();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: true\n      });\n      dispatch({\n        type: 'CLEAR_ERROR'\n      });\n      const data = await authService.login(email, password);\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          user: data.user\n        }\n      });\n      return data;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      dispatch({\n        type: 'SET_ERROR',\n        payload: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Login failed'\n      });\n      throw error;\n    }\n  };\n  const register = async userData => {\n    try {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: true\n      });\n      dispatch({\n        type: 'CLEAR_ERROR'\n      });\n      const data = await authService.register(userData);\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          user: data.user\n        }\n      });\n      return data;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      dispatch({\n        type: 'SET_ERROR',\n        payload: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Registration failed'\n      });\n      throw error;\n    }\n  };\n  const logout = () => {\n    authService.logout();\n    dispatch({\n      type: 'LOGOUT'\n    });\n  };\n  const clearError = () => {\n    dispatch({\n      type: 'CLEAR_ERROR'\n    });\n  };\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    clearError,\n    isAdmin: () => authService.isAdmin()\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","authService","jsxDEV","_jsxDEV","AuthContext","authReducer","state","action","type","isAuthenticated","user","payload","loading","error","initialState","AuthProvider","children","_s","dispatch","initAuth","getCurrentUser","login","email","password","data","_error$response","_error$response$data","response","register","userData","_error$response2","_error$response2$data","logout","clearError","value","isAdmin","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/home/rcts/Desktop/k-hub/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport { authService } from '../services';\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst authReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_SUCCESS':\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                user: action.payload.user,\r\n                loading: false,\r\n                error: null\r\n            };\r\n        case 'LOGOUT':\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n                user: null,\r\n                loading: false,\r\n                error: null\r\n            };\r\n        case 'SET_LOADING':\r\n            return {\r\n                ...state,\r\n                loading: action.payload\r\n            };\r\n        case 'SET_ERROR':\r\n            return {\r\n                ...state,\r\n                error: action.payload,\r\n                loading: false\r\n            };\r\n        case 'CLEAR_ERROR':\r\n            return {\r\n                ...state,\r\n                error: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: null,\r\n    loading: true,\r\n    error: null\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n    useEffect(() => {\r\n        const initAuth = () => {\r\n            const user = authService.getCurrentUser();\r\n            const isAuthenticated = authService.isAuthenticated();\r\n            \r\n            if (isAuthenticated && user) {\r\n                dispatch({\r\n                    type: 'LOGIN_SUCCESS',\r\n                    payload: { user }\r\n                });\r\n            } else {\r\n                dispatch({ type: 'SET_LOADING', payload: false });\r\n            }\r\n        };\r\n\r\n        initAuth();\r\n    }, []);\r\n\r\n    const login = async (email, password) => {\r\n        try {\r\n            dispatch({ type: 'SET_LOADING', payload: true });\r\n            dispatch({ type: 'CLEAR_ERROR' });\r\n            \r\n            const data = await authService.login(email, password);\r\n            \r\n            dispatch({\r\n                type: 'LOGIN_SUCCESS',\r\n                payload: { user: data.user }\r\n            });\r\n            \r\n            return data;\r\n        } catch (error) {\r\n            dispatch({\r\n                type: 'SET_ERROR',\r\n                payload: error.response?.data?.error || 'Login failed'\r\n            });\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const register = async (userData) => {\r\n        try {\r\n            dispatch({ type: 'SET_LOADING', payload: true });\r\n            dispatch({ type: 'CLEAR_ERROR' });\r\n            \r\n            const data = await authService.register(userData);\r\n            \r\n            dispatch({\r\n                type: 'LOGIN_SUCCESS',\r\n                payload: { user: data.user }\r\n            });\r\n            \r\n            return data;\r\n        } catch (error) {\r\n            dispatch({\r\n                type: 'SET_ERROR',\r\n                payload: error.response?.data?.error || 'Registration failed'\r\n            });\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        authService.logout();\r\n        dispatch({ type: 'LOGOUT' });\r\n    };\r\n\r\n    const clearError = () => {\r\n        dispatch({ type: 'CLEAR_ERROR' });\r\n    };\r\n\r\n    const value = {\r\n        ...state,\r\n        login,\r\n        register,\r\n        logout,\r\n        clearError,\r\n        isAdmin: () => authService.isAdmin()\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAuth = () => {\r\n    const context = useContext(AuthContext);\r\n    if (!context) {\r\n        throw new Error('useAuth must be used within an AuthProvider');\r\n    }\r\n    return context;\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC/E,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,MAAMQ,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACnC,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,eAAe;MAChB,OAAO;QACH,GAAGF,KAAK;QACRG,eAAe,EAAE,IAAI;QACrBC,IAAI,EAAEH,MAAM,CAACI,OAAO,CAACD,IAAI;QACzBE,OAAO,EAAE,KAAK;QACdC,KAAK,EAAE;MACX,CAAC;IACL,KAAK,QAAQ;MACT,OAAO;QACH,GAAGP,KAAK;QACRG,eAAe,EAAE,KAAK;QACtBC,IAAI,EAAE,IAAI;QACVE,OAAO,EAAE,KAAK;QACdC,KAAK,EAAE;MACX,CAAC;IACL,KAAK,aAAa;MACd,OAAO;QACH,GAAGP,KAAK;QACRM,OAAO,EAAEL,MAAM,CAACI;MACpB,CAAC;IACL,KAAK,WAAW;MACZ,OAAO;QACH,GAAGL,KAAK;QACRO,KAAK,EAAEN,MAAM,CAACI,OAAO;QACrBC,OAAO,EAAE;MACb,CAAC;IACL,KAAK,aAAa;MACd,OAAO;QACH,GAAGN,KAAK;QACRO,KAAK,EAAE;MACX,CAAC;IACL;MACI,OAAOP,KAAK;EACpB;AACJ,CAAC;AAED,MAAMQ,YAAY,GAAG;EACjBL,eAAe,EAAE,KAAK;EACtBC,IAAI,EAAE,IAAI;EACVE,OAAO,EAAE,IAAI;EACbC,KAAK,EAAE;AACX,CAAC;AAED,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACX,KAAK,EAAEY,QAAQ,CAAC,GAAGnB,UAAU,CAACM,WAAW,EAAES,YAAY,CAAC;EAE/Dd,SAAS,CAAC,MAAM;IACZ,MAAMmB,QAAQ,GAAGA,CAAA,KAAM;MACnB,MAAMT,IAAI,GAAGT,WAAW,CAACmB,cAAc,CAAC,CAAC;MACzC,MAAMX,eAAe,GAAGR,WAAW,CAACQ,eAAe,CAAC,CAAC;MAErD,IAAIA,eAAe,IAAIC,IAAI,EAAE;QACzBQ,QAAQ,CAAC;UACLV,IAAI,EAAE,eAAe;UACrBG,OAAO,EAAE;YAAED;UAAK;QACpB,CAAC,CAAC;MACN,CAAC,MAAM;QACHQ,QAAQ,CAAC;UAAEV,IAAI,EAAE,aAAa;UAAEG,OAAO,EAAE;QAAM,CAAC,CAAC;MACrD;IACJ,CAAC;IAEDQ,QAAQ,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACrC,IAAI;MACAL,QAAQ,CAAC;QAAEV,IAAI,EAAE,aAAa;QAAEG,OAAO,EAAE;MAAK,CAAC,CAAC;MAChDO,QAAQ,CAAC;QAAEV,IAAI,EAAE;MAAc,CAAC,CAAC;MAEjC,MAAMgB,IAAI,GAAG,MAAMvB,WAAW,CAACoB,KAAK,CAACC,KAAK,EAAEC,QAAQ,CAAC;MAErDL,QAAQ,CAAC;QACLV,IAAI,EAAE,eAAe;QACrBG,OAAO,EAAE;UAAED,IAAI,EAAEc,IAAI,CAACd;QAAK;MAC/B,CAAC,CAAC;MAEF,OAAOc,IAAI;IACf,CAAC,CAAC,OAAOX,KAAK,EAAE;MAAA,IAAAY,eAAA,EAAAC,oBAAA;MACZR,QAAQ,CAAC;QACLV,IAAI,EAAE,WAAW;QACjBG,OAAO,EAAE,EAAAc,eAAA,GAAAZ,KAAK,CAACc,QAAQ,cAAAF,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBD,IAAI,cAAAE,oBAAA,uBAApBA,oBAAA,CAAsBb,KAAK,KAAI;MAC5C,CAAC,CAAC;MACF,MAAMA,KAAK;IACf;EACJ,CAAC;EAED,MAAMe,QAAQ,GAAG,MAAOC,QAAQ,IAAK;IACjC,IAAI;MACAX,QAAQ,CAAC;QAAEV,IAAI,EAAE,aAAa;QAAEG,OAAO,EAAE;MAAK,CAAC,CAAC;MAChDO,QAAQ,CAAC;QAAEV,IAAI,EAAE;MAAc,CAAC,CAAC;MAEjC,MAAMgB,IAAI,GAAG,MAAMvB,WAAW,CAAC2B,QAAQ,CAACC,QAAQ,CAAC;MAEjDX,QAAQ,CAAC;QACLV,IAAI,EAAE,eAAe;QACrBG,OAAO,EAAE;UAAED,IAAI,EAAEc,IAAI,CAACd;QAAK;MAC/B,CAAC,CAAC;MAEF,OAAOc,IAAI;IACf,CAAC,CAAC,OAAOX,KAAK,EAAE;MAAA,IAAAiB,gBAAA,EAAAC,qBAAA;MACZb,QAAQ,CAAC;QACLV,IAAI,EAAE,WAAW;QACjBG,OAAO,EAAE,EAAAmB,gBAAA,GAAAjB,KAAK,CAACc,QAAQ,cAAAG,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBN,IAAI,cAAAO,qBAAA,uBAApBA,qBAAA,CAAsBlB,KAAK,KAAI;MAC5C,CAAC,CAAC;MACF,MAAMA,KAAK;IACf;EACJ,CAAC;EAED,MAAMmB,MAAM,GAAGA,CAAA,KAAM;IACjB/B,WAAW,CAAC+B,MAAM,CAAC,CAAC;IACpBd,QAAQ,CAAC;MAAEV,IAAI,EAAE;IAAS,CAAC,CAAC;EAChC,CAAC;EAED,MAAMyB,UAAU,GAAGA,CAAA,KAAM;IACrBf,QAAQ,CAAC;MAAEV,IAAI,EAAE;IAAc,CAAC,CAAC;EACrC,CAAC;EAED,MAAM0B,KAAK,GAAG;IACV,GAAG5B,KAAK;IACRe,KAAK;IACLO,QAAQ;IACRI,MAAM;IACNC,UAAU;IACVE,OAAO,EAAEA,CAAA,KAAMlC,WAAW,CAACkC,OAAO,CAAC;EACvC,CAAC;EAED,oBACIhC,OAAA,CAACC,WAAW,CAACgC,QAAQ;IAACF,KAAK,EAAEA,KAAM;IAAAlB,QAAA,EAC9BA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACvB,EAAA,CAxFWF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AA0FzB,OAAO,MAAM2B,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACzB,MAAMC,OAAO,GAAG9C,UAAU,CAACM,WAAW,CAAC;EACvC,IAAI,CAACwC,OAAO,EAAE;IACV,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAClE;EACA,OAAOD,OAAO;AAClB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}