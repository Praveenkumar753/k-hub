{"ast":null,"code":"var _jsxFileName = \"/home/rcts/Desktop/k-hub/frontend/src/components/NotificationDropdown.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { notificationService } from '../services/notificationService';\nimport { FiBell, FiX } from 'react-icons/fi';\nimport moment from 'moment';\nimport { useAuth } from '../contexts/AuthContext'; // Add this import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationDropdown = () => {\n  _s();\n  const {\n    user\n  } = useAuth(); // Add this line\n  const [notifications, setNotifications] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const dropdownRef = useRef(null);\n  useEffect(() => {\n    fetchNotifications();\n    // Add click outside listener\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n  const handleClickOutside = event => {\n    if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n      setIsOpen(false);\n    }\n  };\n  const fetchNotifications = async () => {\n    try {\n      const response = await notificationService.getAllNotifications();\n      setNotifications(response.notifications);\n    } catch (error) {\n      console.error('Error fetching notifications:', error);\n    }\n  };\n  const markNotificationsAsRead = async notificationsList => {\n    const unreadNotifications = notificationsList.filter(notification => !notification.isRead).map(notification => notification._id);\n    if (unreadNotifications.length > 0) {\n      try {\n        await notificationService.markAsRead(unreadNotifications);\n        // Update local state\n        setNotifications(prevNotifications => prevNotifications.map(notification => ({\n          ...notification,\n          isRead: true,\n          readBy: [...(notification.readBy || []), {\n            userId: user === null || user === void 0 ? void 0 : user._id,\n            readAt: new Date()\n          } // Add optional chaining\n          ]\n        })));\n      } catch (error) {\n        console.error('Error marking notifications as read:', error);\n      }\n    }\n  };\n  const handleToggleDropdown = () => {\n    const newIsOpen = !isOpen;\n    setIsOpen(newIsOpen);\n    if (newIsOpen && notifications.length > 0) {\n      markNotificationsAsRead(notifications);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative\",\n    ref: dropdownRef,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleToggleDropdown,\n      className: \"relative p-2 text-gray-600 hover:bg-gray-100 rounded-full focus:outline-none focus:ring-2 focus:ring-blue-500\",\n      children: [/*#__PURE__*/_jsxDEV(FiBell, {\n        className: \"w-6 h-6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), notifications.filter(n => !n.isRead).length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"absolute top-0 right-0 inline-flex items-center justify-center px-2 py-1 text-xs font-bold leading-none text-white transform translate-x-1/2 -translate-y-1/2 bg-red-500 rounded-full\",\n        children: notifications.filter(n => !n.isRead).length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute right-0 mt-2 w-80 bg-white rounded-lg shadow-lg overflow-hidden z-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-3 bg-gray-50 border-b flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold text-gray-700\",\n          children: \"Notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsOpen(false),\n          className: \"text-gray-500 hover:text-gray-700\",\n          children: /*#__PURE__*/_jsxDEV(FiX, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-h-96 overflow-y-auto\",\n        children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 text-center text-gray-500\",\n          children: \"Loading notifications...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }, this) : notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 text-center text-gray-500\",\n          children: \"No notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 29\n        }, this) : notifications.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `p-4 border-b hover:bg-gray-50 transition-colors ${!notification.isRead ? 'bg-blue-50' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-start\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"font-medium text-gray-900\",\n                children: notification.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-600 mt-1\",\n                children: notification.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-xs text-gray-500 mt-2\",\n                children: moment(notification.createdAt).fromNow()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 41\n            }, this), !notification.readAt && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"inline-block w-2 h-2 bg-blue-500 rounded-full\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 37\n          }, this)\n        }, notification._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this), notifications.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-3 bg-gray-50 border-t text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsOpen(false),\n          className: \"text-sm text-blue-600 hover:text-blue-700\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(NotificationDropdown, \"7tJo5cvtdUfPzaCa1cVUXaeO9Ok=\", false, function () {\n  return [useAuth];\n});\n_c = NotificationDropdown;\nexport default NotificationDropdown;\nvar _c;\n$RefreshReg$(_c, \"NotificationDropdown\");","map":{"version":3,"names":["React","useState","useEffect","useRef","notificationService","FiBell","FiX","moment","useAuth","jsxDEV","_jsxDEV","NotificationDropdown","_s","user","notifications","setNotifications","isOpen","setIsOpen","loading","setLoading","dropdownRef","fetchNotifications","document","addEventListener","handleClickOutside","removeEventListener","event","current","contains","target","response","getAllNotifications","error","console","markNotificationsAsRead","notificationsList","unreadNotifications","filter","notification","isRead","map","_id","length","markAsRead","prevNotifications","readBy","userId","readAt","Date","handleToggleDropdown","newIsOpen","className","ref","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","n","title","message","createdAt","fromNow","_c","$RefreshReg$"],"sources":["/home/rcts/Desktop/k-hub/frontend/src/components/NotificationDropdown.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { notificationService } from '../services/notificationService';\nimport { FiBell, FiX } from 'react-icons/fi';\nimport moment from 'moment';\nimport { useAuth } from '../contexts/AuthContext'; // Add this import\n\nconst NotificationDropdown = () => {\n    const { user } = useAuth(); // Add this line\n    const [notifications, setNotifications] = useState([]);\n    const [isOpen, setIsOpen] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const dropdownRef = useRef(null);\n\n    useEffect(() => {\n        fetchNotifications();\n        // Add click outside listener\n        document.addEventListener('mousedown', handleClickOutside);\n        return () => document.removeEventListener('mousedown', handleClickOutside);\n    }, []);\n\n    const handleClickOutside = (event) => {\n        if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n            setIsOpen(false);\n        }\n    };\n\n    const fetchNotifications = async () => {\n        try {\n            const response = await notificationService.getAllNotifications();\n            setNotifications(response.notifications);\n        } catch (error) {\n            console.error('Error fetching notifications:', error);\n        }\n    };\n\n    const markNotificationsAsRead = async (notificationsList) => {\n        const unreadNotifications = notificationsList\n            .filter(notification => !notification.isRead)\n            .map(notification => notification._id);\n\n        if (unreadNotifications.length > 0) {\n            try {\n                await notificationService.markAsRead(unreadNotifications);\n                // Update local state\n                setNotifications(prevNotifications =>\n                    prevNotifications.map(notification => ({\n                        ...notification,\n                        isRead: true,\n                        readBy: [\n                            ...(notification.readBy || []),\n                            { userId: user?._id, readAt: new Date() } // Add optional chaining\n                        ]\n                    }))\n                );\n            } catch (error) {\n                console.error('Error marking notifications as read:', error);\n            }\n        }\n    };\n\n    const handleToggleDropdown = () => {\n        const newIsOpen = !isOpen;\n        setIsOpen(newIsOpen);\n\n        if (newIsOpen && notifications.length > 0) {\n            markNotificationsAsRead(notifications);\n        }\n    };\n\n    return (\n        <div className=\"relative\" ref={dropdownRef}>\n            <button\n                onClick={handleToggleDropdown}\n                className=\"relative p-2 text-gray-600 hover:bg-gray-100 rounded-full focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            >\n                <FiBell className=\"w-6 h-6\" />\n                {notifications.filter(n => !n.isRead).length > 0 && (\n                    <span className=\"absolute top-0 right-0 inline-flex items-center justify-center px-2 py-1 text-xs font-bold leading-none text-white transform translate-x-1/2 -translate-y-1/2 bg-red-500 rounded-full\">\n                        {notifications.filter(n => !n.isRead).length}\n                    </span>\n                )}\n            </button>\n\n            {isOpen && (\n                <div className=\"absolute right-0 mt-2 w-80 bg-white rounded-lg shadow-lg overflow-hidden z-50\">\n                    <div className=\"p-3 bg-gray-50 border-b flex justify-between items-center\">\n                        <h3 className=\"font-semibold text-gray-700\">Notifications</h3>\n                        <button\n                            onClick={() => setIsOpen(false)}\n                            className=\"text-gray-500 hover:text-gray-700\"\n                        >\n                            <FiX className=\"w-5 h-5\" />\n                        </button>\n                    </div>\n\n                    <div className=\"max-h-96 overflow-y-auto\">\n                        {loading ? (\n                            <div className=\"p-4 text-center text-gray-500\">\n                                Loading notifications...\n                            </div>\n                        ) : notifications.length === 0 ? (\n                            <div className=\"p-4 text-center text-gray-500\">\n                                No notifications\n                            </div>\n                        ) : (\n                            notifications.map((notification) => (\n                                <div\n                                    key={notification._id}\n                                    className={`p-4 border-b hover:bg-gray-50 transition-colors ${\n                                        !notification.isRead ? 'bg-blue-50' : ''\n                                    }`}\n                                >\n                                    <div className=\"flex items-start\">\n                                        <div className=\"flex-1\">\n                                            <h4 className=\"font-medium text-gray-900\">\n                                                {notification.title}\n                                            </h4>\n                                            <p className=\"text-sm text-gray-600 mt-1\">\n                                                {notification.message}\n                                            </p>\n                                            <p className=\"text-xs text-gray-500 mt-2\">\n                                                {moment(notification.createdAt).fromNow()}\n                                            </p>\n                                        </div>\n                                        {!notification.readAt && (\n                                            <span className=\"inline-block w-2 h-2 bg-blue-500 rounded-full\"></span>\n                                        )}\n                                    </div>\n                                </div>\n                            ))\n                        )}\n                    </div>\n\n                    {notifications.length > 0 && (\n                        <div className=\"p-3 bg-gray-50 border-t text-center\">\n                            <button\n                                onClick={() => setIsOpen(false)}\n                                className=\"text-sm text-blue-600 hover:text-blue-700\"\n                            >\n                                Close\n                            </button>\n                        </div>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default NotificationDropdown;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}